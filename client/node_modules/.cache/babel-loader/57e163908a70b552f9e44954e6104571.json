{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sofi/Coding/task-managment-system/client/src/pages/CreateOrganization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { postMethod } from '../helpers/request';\nimport validator from 'validator';\n\nconst CreateOrganization = () => {\n  _s();\n\n  const [statusMessage, setStatusMessage] = useState('');\n  const [emails, setEmails] = useState([]);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const formData = Object.fromEntries(new FormData(form).entries());\n    console.log(formData);\n    const request = await postMethod(formData, '/api/organizations/');\n    const requestResponse = request.data.message;\n    setStatusMessage(requestResponse);\n  };\n\n  const addEmail = event => {\n    event.preventDefault();\n    const emailInput = document.querySelector('#email');\n    const email = emailInput.value;\n\n    if (!validator.isEmail(email)) {\n      return setStatusMessage('please add valid emaill');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"create organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" organization name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"organization name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"showEmails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email address\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addEmail,\n          children: \"invite person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"create organization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateOrganization, \"bv6p0IM4gstW37iEBEnBiCYjt0E=\");\n\n_c = CreateOrganization;\nexport default CreateOrganization;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrganization\");","map":{"version":3,"sources":["/home/sofi/Coding/task-managment-system/client/src/pages/CreateOrganization.js"],"names":["React","useState","postMethod","validator","CreateOrganization","statusMessage","setStatusMessage","emails","setEmails","handleFormSubmit","event","preventDefault","form","target","formData","Object","fromEntries","FormData","entries","console","log","request","requestResponse","data","message","addEmail","emailInput","document","querySelector","email","value","isEmail"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAEM,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,IAAIC,QAAJ,CAAaL,IAAb,EAAmBM,OAAnB,EAAnB,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,UAAMO,OAAO,GAAG,MAAMnB,UAAU,CAACY,QAAD,EAAW,qBAAX,CAAhC;AACA,UAAMQ,eAAe,GAAGD,OAAO,CAACE,IAAR,CAAaC,OAArC;AACAlB,IAAAA,gBAAgB,CAACgB,eAAD,CAAhB;AACH,GARD;;AAUA,QAAMG,QAAQ,GAAIf,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMe,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACA,UAAMC,KAAK,GAAGH,UAAU,CAACI,KAAzB;;AAEA,QAAG,CAAC3B,SAAS,CAAC4B,OAAV,CAAkBF,KAAlB,CAAJ,EAA8B;AAC1B,aAAOvB,gBAAgB,CAAC,yBAAD,CAAvB;AACH;AACJ,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEI,gBAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,eAAvB;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAEgB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCD;;GAAMrB,kB;;KAAAA,kB;AA0CN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { postMethod } from '../helpers/request'\nimport validator from 'validator'\n\nconst CreateOrganization = () => {\n    const [ statusMessage, setStatusMessage ] = useState('')\n    const [ emails, setEmails ] = useState([])\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        const form = event.target\n        const formData = Object.fromEntries(new FormData(form).entries())\n        console.log(formData)\n        const request = await postMethod(formData, '/api/organizations/')\n        const requestResponse = request.data.message\n        setStatusMessage(requestResponse)\n    }\n\n    const addEmail = (event) => {\n        event.preventDefault()\n        const emailInput = document.querySelector('#email')\n        const email = emailInput.value\n        \n        if(!validator.isEmail(email)) {\n            return setStatusMessage('please add valid emaill')\n        }\n    }\n\n    return(\n        <div>\n            <h1>create organization</h1>\n            <p>{ statusMessage }</p>\n            <form onSubmit={handleFormSubmit}>\n                <label> organization name: </label>\n                <input type=\"text\" name=\"name\" placeholder=\"organization name\" />\n                <div>\n                    <div id=\"showEmails\"></div>\n                    <input id=\"email\" name=\"email address\" type=\"email\" />\n                    <button onClick={addEmail}>invite person</button>\n                </div>\n                <input type=\"submit\" value=\"create organization\" />\n            </form>\n        </div>\n    )\n}\n\nexport default CreateOrganization"]},"metadata":{},"sourceType":"module"}