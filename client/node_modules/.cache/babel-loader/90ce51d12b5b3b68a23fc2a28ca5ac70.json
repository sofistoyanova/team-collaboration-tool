{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sofi/Coding/task-managment-system/client/src/pages/Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst {\n  getMethod,\n  postMethod\n} = require('../helpers/request');\n\nconst Notifications = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(async () => {\n    const getInvitationsRequest = await getMethod('/api/users/invitations');\n    const getInvitationsRequestData = getInvitationsRequest.data;\n    const getInvitationsRequestStatus = getInvitationsRequestData.status;\n\n    if (getInvitationsRequestStatus != 200) {\n      setErrorMessage('There was an error retrieving all invtiations, plese try again later');\n    }\n\n    const invtitations = getInvitationsRequestData.message;\n    const invitationsContainer = document.querySelector('#invitations');\n    invtitations.map((organization, index) => {\n      const organizationName = organization.name;\n      const template = document.createElement('div');\n      template.innerHTML = `\n                <p>${organizationName}</p>\n                <button onClick={sendAnswer}>accept</button>\n                <button onClick={sendAnswer}>decline</button>\n            `;\n      invitationsContainer.appendChild(template);\n    });\n  });\n\n  const sendAnswer = event => {\n    event.preventDefault();\n    alert('click');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Notifications:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"invitations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notifications, \"Nx/r08pQOg8i+c1V/+VZGwEk31s=\");\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["/home/sofi/Coding/task-managment-system/client/src/pages/Notifications.js"],"names":["React","useState","useEffect","getMethod","postMethod","require","Notifications","errorMessage","setErrorMessage","getInvitationsRequest","getInvitationsRequestData","data","getInvitationsRequestStatus","status","invtitations","message","invitationsContainer","document","querySelector","map","organization","index","organizationName","name","template","createElement","innerHTML","appendChild","sendAnswer","event","preventDefault","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,MAAM;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA4BC,OAAO,CAAC,oBAAD,CAAzC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMO,qBAAqB,GAAG,MAAMN,SAAS,CAAC,wBAAD,CAA7C;AACA,UAAMO,yBAAyB,GAAGD,qBAAqB,CAACE,IAAxD;AACA,UAAMC,2BAA2B,GAAGF,yBAAyB,CAACG,MAA9D;;AAEA,QAAGD,2BAA2B,IAAI,GAAlC,EAAuC;AACnCJ,MAAAA,eAAe,CAAC,sEAAD,CAAf;AACH;;AAED,UAAMM,YAAY,GAAGJ,yBAAyB,CAACK,OAA/C;AACA,UAAMC,oBAAoB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAA7B;AAEAJ,IAAAA,YAAY,CAACK,GAAb,CAAiB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACtC,YAAMC,gBAAgB,GAAGF,YAAY,CAACG,IAAtC;AACA,YAAMC,QAAQ,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,KAAvB,CAAjB;AACAD,MAAAA,QAAQ,CAACE,SAAT,GAAsB;AAClC,qBAAqBJ,gBAAiB;AACtC;AACA;AACA,aAJY;AAKAN,MAAAA,oBAAoB,CAACW,WAArB,CAAiCH,QAAjC;AACH,KATD;AAUH,GAtBQ,CAAT;;AAwBA,QAAMI,UAAU,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtCD;;GAAMzB,a;;KAAAA,a;AAwCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nconst { getMethod, postMethod } = require('../helpers/request')\n\nconst Notifications = () => {\n    const [ errorMessage, setErrorMessage ] = useState('')\n\n    useEffect(async () => {\n        const getInvitationsRequest = await getMethod('/api/users/invitations')\n        const getInvitationsRequestData = getInvitationsRequest.data\n        const getInvitationsRequestStatus = getInvitationsRequestData.status\n        \n        if(getInvitationsRequestStatus != 200) {\n            setErrorMessage('There was an error retrieving all invtiations, plese try again later')\n        }\n\n        const invtitations = getInvitationsRequestData.message\n        const invitationsContainer = document.querySelector('#invitations')\n\n        invtitations.map((organization, index) => {\n            const organizationName = organization.name\n            const template = document.createElement('div')\n            template.innerHTML = `\n                <p>${organizationName}</p>\n                <button onClick={sendAnswer}>accept</button>\n                <button onClick={sendAnswer}>decline</button>\n            `\n            invitationsContainer.appendChild(template)\n        })\n    })\n\n    const sendAnswer = (event) => {\n        event.preventDefault()\n        alert('click')\n    }\n\n    return (\n        <div>\n            <h1>Your Notifications:</h1>\n            <div id=\"invitations\"></div>\n        </div>\n    )\n}\n\nexport default Notifications"]},"metadata":{},"sourceType":"module"}