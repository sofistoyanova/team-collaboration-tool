{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sofi/Coding/task-managment-system/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { userLoginValidation } from '../helpers/formValidation';\nimport { postMethod } from '../helpers/request';\n\nconst Login = () => {\n  _s();\n\n  const [loginErrorMsg, setLoginErrorMsg] = useState('');\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    console.log(5);\n    const form = document.querySelector('form');\n    let formData = Object.fromEntries(new FormData(form).entries());\n    const formValidation = userLoginValidation(formData);\n    const formValidationStatus = formValidation.code;\n\n    if (formValidationStatus != 200) {\n      console.log('verr', formValidation);\n      return setLoginErrorMsg(formValidation.message);\n    }\n\n    const request = await postMethod(formData, '/api/users/login');\n    const requestData = request.data;\n\n    if (requestData.status == 200) {\n      // redirect to home\n      // set local storage cookie\n      setLoginErrorMsg('success');\n      const user = request.data.message;\n      const userId = user._id;\n      console.log('user', userId);\n    } else {\n      console.log(1); // redirect\n      // establish cookie/local storage\n\n      setLoginErrorMsg(requestData.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: loginErrorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"a@a.com\",\n          value: \"s@a.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: \"11111111111\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"GExdpmoSlboM/nnuE1FGKxM4QgA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/sofi/Coding/task-managment-system/client/src/pages/Login.js"],"names":["React","useState","userLoginValidation","postMethod","Login","loginErrorMsg","setLoginErrorMsg","handleFormSubmit","event","preventDefault","console","log","form","document","querySelector","formData","Object","fromEntries","FormData","entries","formValidation","formValidationStatus","code","message","request","requestData","data","status","user","userId","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMM,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,IAAIC,QAAJ,CAAaN,IAAb,EAAmBO,OAAnB,EAAnB,CAAf;AACA,UAAMC,cAAc,GAAGlB,mBAAmB,CAACa,QAAD,CAA1C;AACA,UAAMM,oBAAoB,GAAGD,cAAc,CAACE,IAA5C;;AAEA,QAAGD,oBAAoB,IAAI,GAA3B,EAAgC;AAC5BX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,cAApB;AACA,aAAOd,gBAAgB,CAACc,cAAc,CAACG,OAAhB,CAAvB;AACH;;AAED,UAAMC,OAAO,GAAG,MAAMrB,UAAU,CAACY,QAAD,EAAW,kBAAX,CAAhC;AAEA,UAAMU,WAAW,GAAGD,OAAO,CAACE,IAA5B;;AAEA,QAAGD,WAAW,CAACE,MAAZ,IAAsB,GAAzB,EAA8B;AAC1B;AACA;AACArB,MAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACA,YAAMsB,IAAI,GAAGJ,OAAO,CAACE,IAAR,CAAaH,OAA1B;AACA,YAAMM,MAAM,GAAGD,IAAI,CAACE,GAApB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkB,MAApB;AACH,KAPD,MAOO;AACHnB,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EADG,CAEH;AACA;;AACAL,MAAAA,gBAAgB,CAACmB,WAAW,CAACF,OAAb,CAAhB;AACH;AAEJ,GA/BD;;AAiCA,sBACI;AAAA,4BACI;AAAA,gBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEE,gBAAhB;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,WAAW,EAAC,SAA7C;AAAuD,UAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAC,aAA7B;AAA2C,UAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtDD;;GAAMH,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport { userLoginValidation } from '../helpers/formValidation'\nimport { postMethod } from '../helpers/request'\n\n\nconst Login = () => {\n    const [ loginErrorMsg, setLoginErrorMsg ] = useState('')\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        console.log(5)\n        const form = document.querySelector('form')\n        let formData = Object.fromEntries(new FormData(form).entries())\n        const formValidation = userLoginValidation(formData)\n        const formValidationStatus = formValidation.code\n\n        if(formValidationStatus != 200) {\n            console.log('verr', formValidation)\n            return setLoginErrorMsg(formValidation.message)\n        }\n\n        const request = await postMethod(formData, '/api/users/login')\n\n        const requestData = request.data\n\n        if(requestData.status == 200) {\n            // redirect to home\n            // set local storage cookie\n            setLoginErrorMsg('success')\n            const user = request.data.message\n            const userId = user._id\n            console.log('user', userId)\n        } else {\n            console.log(1)\n            // redirect\n            // establish cookie/local storage\n            setLoginErrorMsg(requestData.message)\n        }\n        \n    }\n\n    return (\n        <div>\n            <p>{loginErrorMsg}</p>\n            <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label>Email</label>\n                    <input type=\"email\" name=\"email\" placeholder=\"a@a.com\" value=\"s@a.com\" />\n                </div>\n\n                <div>\n                    <label>Password </label>\n                    <input type=\"password\" value=\"11111111111\" name=\"password\" />\n                </div>\n\n                <input type=\"submit\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}