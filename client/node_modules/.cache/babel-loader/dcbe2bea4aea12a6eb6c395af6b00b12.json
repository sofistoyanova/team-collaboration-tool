{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sofi/Coding/task-managment-system/client/src/components/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport const ProtectedRoute = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (window.localStorage.getItem(\"userId\")) {\n        return children;\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/sofi/Coding/task-managment-system/client/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","children","rest","props","window","localStorage","getItem","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACvD,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAAJ,EAA2C;AACzC,eAAOL,QAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFM,YAAAA,QAAQ,EAAE,QADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAEN,KAAK,CAACO;AADP;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AACF;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBM;KAAMV,c","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const ProtectedRoute = ({ children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (window.localStorage.getItem(\"userId\")) {\n          return children;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            ></Redirect>\n          );\n        }\n      }}\n    ></Route>\n  );\n};"]},"metadata":{},"sourceType":"module"}