{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sofi/Coding/task-managment-system/client/src/pages/Organization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst {\n  getMethod,\n  postMethod\n} = require('../helpers/request');\n\nconst Organization = () => {\n  _s();\n\n  const [statusMessage, setStatusMessage] = useState('');\n  const url = window.location.search;\n  const organizationId = new URLSearchParams(url).get('id');\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const formData = Object.fromEntries(new FormData(form).entries());\n    const request = await postMethod(formData, `/api/organizations/invite?id=${organizationId}`);\n    const requestData = request.data;\n    const {\n      status,\n      message\n    } = requestData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Organization page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Type user email you want to invite: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"a@a.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"send request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Organization, \"iYmP5fx/wieH6oUG5l2yl7F9Mm4=\");\n\n_c = Organization;\nexport default Organization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Organization\");","map":{"version":3,"sources":["/home/sofi/Coding/task-managment-system/client/src/pages/Organization.js"],"names":["React","useState","useEffect","useParams","getMethod","postMethod","require","Organization","statusMessage","setStatusMessage","url","window","location","search","organizationId","URLSearchParams","get","handleFormSubmit","event","preventDefault","form","target","formData","Object","fromEntries","FormData","entries","request","requestData","data","status","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AACA,MAAM;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA4BC,OAAO,CAAC,oBAAD,CAAzC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMS,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAA5B;AACA,QAAMC,cAAc,GAAG,IAAIC,eAAJ,CAAoBL,GAApB,EAAyBM,GAAzB,CAA6B,IAA7B,CAAvB;;AAEA,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,IAAIC,QAAJ,CAAaL,IAAb,EAAmBM,OAAnB,EAAnB,CAAjB;AAEA,UAAMC,OAAO,GAAG,MAAMtB,UAAU,CAACiB,QAAD,EAAY,gCAA+BR,cAAe,EAA1D,CAAhC;AACA,UAAMc,WAAW,GAAGD,OAAO,CAACE,IAA5B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsBH,WAA5B;AAEH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEX,gBAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7BD;;GAAMV,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nconst { getMethod, postMethod } = require('../helpers/request')\n\nconst Organization = () => {\n    const [ statusMessage, setStatusMessage ] = useState('')\n    const url = window.location.search\n    const organizationId = new URLSearchParams(url).get('id')\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        const form = event.target\n        const formData = Object.fromEntries(new FormData(form).entries())\n\n        const request = await postMethod(formData, `/api/organizations/invite?id=${organizationId}`)\n        const requestData = request.data\n        const { status, message } = requestData\n        \n    }\n    \n    return (\n        <div>\n            <h1>Organization page</h1>\n        \n            <div>\n                <form onSubmit={handleFormSubmit}>\n                    <label> Type user email you want to invite: </label>\n                    <input type=\"email\" name=\"email\" placeholder=\"a@a.com\" />\n                    <input type=\"submit\" value=\"send request\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Organization"]},"metadata":{},"sourceType":"module"}